{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win 10\\\\Documents\\\\GitHub\\\\BlogApp\\\\client\\\\src\\\\components\\\\Article.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"../styles/Article.module.css\";\nimport { format } from \"date-fns\";\nimport { Post } from \"../pages/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Article({\n  selectedCategory,\n  articleFilter\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    if (articleFilter) {\n      fetchFilteredPosts();\n    } else if (selectedCategory) {\n      fetchCategoryPosts();\n    } else {\n      fetchPopularPosts();\n    }\n  }, [selectedCategory, articleFilter]);\n  async function fetchPopularPosts() {\n    try {\n      const response = await fetch(\"http://localhost:3001/posts/popularposts\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch popular posts\");\n      }\n      const popularPosts = await response.json();\n      if (popularPosts.length === 0) {\n        alert(\"No popular posts found.\");\n      } else {\n        setPosts(popularPosts);\n      }\n    } catch (error) {\n      console.error(\"Error fetching popular posts: \", error);\n    }\n  }\n  async function fetchCategoryPosts() {\n    try {\n      const response = await fetch(`http://localhost:3001/posts/category?category=${selectedCategory}`);\n      if (!response.ok) {\n        throw new Error(\"Error fetching posts based on category\");\n      }\n      const categoryPosts = await response.json();\n      setPosts(categoryPosts);\n    } catch (error) {\n      console.error(\"Error fetching category posts:\", error);\n    }\n  }\n  async function fetchFilteredPosts() {\n    try {\n      const url = new URL(\"http://localhost:3001/posts/filteredPosts\");\n      const params = new URLSearchParams();\n      if (articleFilter.dateFilter) {\n        params.set(\"dateFilter\", articleFilter.dateFilter);\n      }\n      if (articleFilter.typeFilter) {\n        params.set(\"typeFilter\", articleFilter.typeFilter);\n      }\n      if (articleFilter.tagFilter) {\n        params.set(\"tagFilter\", articleFilter.tagFilter);\n      }\n      url.search = params.toString();\n      const response = await fetch(url.toString());\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch filtered posts\");\n      }\n      const fetchedPosts = await response.json();\n      setPosts(fetchedPosts);\n    } catch (error) {\n      console.error(\"Error fetching posts: \", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [Array.isArray(posts) && posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"No posts available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.postsContainer,\n      children: Array.isArray(posts) && posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        ...post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), !Array.isArray(posts) && console.error(\"Invalid 'posts' data type:\", typeof posts)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(Article, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Article;\nexport default Article;\nvar _c;\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"names":["React","useEffect","useState","styles","format","Post","jsxDEV","_jsxDEV","Article","selectedCategory","articleFilter","_s","posts","setPosts","fetchFilteredPosts","fetchCategoryPosts","fetchPopularPosts","response","fetch","ok","Error","popularPosts","json","length","alert","error","console","categoryPosts","url","URL","params","URLSearchParams","dateFilter","set","typeFilter","tagFilter","search","toString","fetchedPosts","className","container","children","Array","isArray","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","postsContainer","map","post","_id","_c","$RefreshReg$"],"sources":["C:/Users/Win 10/Documents/GitHub/BlogApp/client/src/components/Article.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../styles/Article.module.css\";\r\nimport { format } from \"date-fns\";\r\nimport { Post } from \"../pages/index\";\r\n\r\nfunction Article({ selectedCategory, articleFilter }) {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (articleFilter) {\r\n      fetchFilteredPosts();\r\n    } else if (selectedCategory) {\r\n      fetchCategoryPosts();\r\n    } else {\r\n      fetchPopularPosts();\r\n    }\r\n  }, [selectedCategory, articleFilter]);\r\n\r\n  async function fetchPopularPosts() {\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/posts/popularposts\");\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch popular posts\");\r\n      }\r\n      const popularPosts = await response.json();\r\n      if (popularPosts.length === 0) {\r\n        alert(\"No popular posts found.\");\r\n      } else {\r\n        setPosts(popularPosts);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching popular posts: \", error);\r\n    }\r\n  }\r\n\r\n  async function fetchCategoryPosts() {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3001/posts/category?category=${selectedCategory}`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Error fetching posts based on category\");\r\n      }\r\n      const categoryPosts = await response.json();\r\n      setPosts(categoryPosts);\r\n    } catch (error) {\r\n      console.error(\"Error fetching category posts:\", error);\r\n    }\r\n  }\r\n\r\n  async function fetchFilteredPosts() {\r\n    try {\r\n      const url = new URL(\"http://localhost:3001/posts/filteredPosts\");\r\n      const params = new URLSearchParams();\r\n\r\n      if (articleFilter.dateFilter) {\r\n        params.set(\"dateFilter\", articleFilter.dateFilter);\r\n      }\r\n\r\n      if (articleFilter.typeFilter) {\r\n        params.set(\"typeFilter\", articleFilter.typeFilter);\r\n      }\r\n\r\n      if (articleFilter.tagFilter) {\r\n        params.set(\"tagFilter\", articleFilter.tagFilter);\r\n      }\r\n\r\n      url.search = params.toString();\r\n      const response = await fetch(url.toString());\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch filtered posts\");\r\n      }\r\n      const fetchedPosts = await response.json();\r\n      setPosts(fetchedPosts);\r\n    } catch (error) {\r\n      console.error(\"Error fetching posts: \", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {Array.isArray(posts) && posts.length === 0 ? (\r\n        <h1 style={{ textAlign: \"center\" }}>No posts available</h1>\r\n      ) : (\r\n        <div className={styles.postsContainer}>\r\n          {Array.isArray(posts) &&\r\n            posts.map((post) => <Post key={post._id} {...post} />)}\r\n        </div>\r\n      )}\r\n      {!Array.isArray(posts) &&\r\n        console.error(\"Invalid 'posts' data type:\", typeof posts)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Article;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}