{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win 10\\\\Documents\\\\GitHub\\\\BlogApp\\\\client\\\\src\\\\components\\\\Article.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"../styles/Article.module.css\";\nimport { format } from \"date-fns\";\nimport { Post } from \"../pages/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Article({\n  selectedCategory,\n  articleFilter\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(10); // Number of posts per page\n\n  useEffect(() => {\n    if (articleFilter) {\n      fetchFilteredPosts();\n    } else if (selectedCategory) {\n      fetchCategoryPosts();\n    } else {\n      fetchPopularPosts();\n    }\n  }, [selectedCategory, articleFilter, page]); // Include 'page' in the dependency array\n\n  async function fetchPopularPosts() {\n    try {\n      const response = await fetch(`http://localhost:3001/posts/popularposts?page=${page}&limit=${limit}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch popular posts\");\n      }\n      const popularPosts = await response.json();\n      if (popularPosts.length === 0) {\n        alert(\"No popular posts found.\");\n      } else {\n        setPosts(popularPosts);\n      }\n    } catch (error) {\n      console.error(\"Error fetching popular posts: \", error);\n    }\n  }\n\n  // Implement fetchCategoryPosts and fetchFilteredPosts functions similar to fetchPopularPosts\n\n  // Function to handle pagination\n  function handlePageChange(newPage) {\n    setPage(newPage);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [Array.isArray(posts) && posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"No posts available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.postsContainer,\n      children: Array.isArray(posts) && posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        ...post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), !Array.isArray(posts) && console.error(\"Invalid 'posts' data type:\", typeof posts), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pagination,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(page - 1),\n        disabled: page === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", page]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(page + 1),\n        disabled: posts.length < limit,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Article, \"ohbRMqyCs3LlRLUIdFvlMPSz1IA=\");\n_c = Article;\nexport default Article;\nvar _c;\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"names":["React","useEffect","useState","styles","format","Post","jsxDEV","_jsxDEV","Article","selectedCategory","articleFilter","_s","posts","setPosts","page","setPage","limit","setLimit","fetchFilteredPosts","fetchCategoryPosts","fetchPopularPosts","response","fetch","ok","Error","popularPosts","json","length","alert","error","console","handlePageChange","newPage","className","container","children","Array","isArray","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","postsContainer","map","post","_id","pagination","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Win 10/Documents/GitHub/BlogApp/client/src/components/Article.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../styles/Article.module.css\";\r\nimport { format } from \"date-fns\";\r\nimport { Post } from \"../pages/index\";\r\n\r\nfunction Article({ selectedCategory, articleFilter }) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(10); // Number of posts per page\r\n\r\n  useEffect(() => {\r\n    if (articleFilter) {\r\n      fetchFilteredPosts();\r\n    } else if (selectedCategory) {\r\n      fetchCategoryPosts();\r\n    } else {\r\n      fetchPopularPosts();\r\n    }\r\n  }, [selectedCategory, articleFilter, page]); // Include 'page' in the dependency array\r\n\r\n  async function fetchPopularPosts() {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3001/posts/popularposts?page=${page}&limit=${limit}`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch popular posts\");\r\n      }\r\n      const popularPosts = await response.json();\r\n      if (popularPosts.length === 0) {\r\n        alert(\"No popular posts found.\");\r\n      } else {\r\n        setPosts(popularPosts);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching popular posts: \", error);\r\n    }\r\n  }\r\n\r\n  // Implement fetchCategoryPosts and fetchFilteredPosts functions similar to fetchPopularPosts\r\n\r\n  // Function to handle pagination\r\n  function handlePageChange(newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {Array.isArray(posts) && posts.length === 0 ? (\r\n        <h1 style={{ textAlign: \"center\" }}>No posts available</h1>\r\n      ) : (\r\n        <div className={styles.postsContainer}>\r\n          {Array.isArray(posts) &&\r\n            posts.map((post) => <Post key={post._id} {...post} />)}\r\n        </div>\r\n      )}\r\n      {!Array.isArray(posts) &&\r\n        console.error(\"Invalid 'posts' data type:\", typeof posts)}\r\n\r\n      {/* Pagination controls */}\r\n      <div className={styles.pagination}>\r\n        <button\r\n          onClick={() => handlePageChange(page - 1)}\r\n          disabled={page === 1}\r\n        >\r\n          Previous\r\n        </button>\r\n        <span>Page {page}</span>\r\n        <button\r\n          onClick={() => handlePageChange(page + 1)}\r\n          disabled={posts.length < limit}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Article;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}