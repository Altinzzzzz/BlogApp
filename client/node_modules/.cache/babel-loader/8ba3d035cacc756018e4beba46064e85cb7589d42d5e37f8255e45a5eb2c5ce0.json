{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win 10\\\\Documents\\\\GitHub\\\\BlogApp\\\\client\\\\src\\\\pages\\\\PostPage.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport styles from \"../styles/PostPage.module.css\";\nimport { format } from \"date-fns\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostPage() {\n  _s();\n  const [postInfo, setPostInfo] = useState(null);\n  const [newComment, setNewComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const {\n    userInfo\n  } = useContext(UserContext);\n  const {\n    id\n  } = useParams();\n  const [commentAdded, setCommentAdded] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(`http://localhost:3001/postInfo/${id}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const postInfo = await response.json();\n        setPostInfo(postInfo);\n        await getComments();\n        setCommentAdded(false);\n      } catch (error) {\n        console.error(\"Error fetching post data:\", error.message);\n      }\n    }\n    fetchData();\n  }, [commentAdded]);\n  useEffect(() => {\n    async function updateViews() {\n      try {\n        const response = await fetch(`http://localhost:3001/postInfo/${id}/updateViews`, {\n          method: \"PUT\"\n        });\n        if (response.ok) {\n          console.log(\"Views updated successfully!\");\n        } else {\n          console.error(\"Failed to update views:\", response.status, response.statusText);\n        }\n      } catch (error) {\n        console.error(\"Error updating views:\", error);\n      }\n    }\n    updateViews();\n  }, []);\n  async function getComments() {\n    try {\n      const response = await fetch(`http://localhost:3001/postInfo/${id}/getcomments`);\n      if (response.ok) {\n        const commentsWithFullname = await response.json();\n        setComments(commentsWithFullname);\n      } else {\n        console.error(\"Failed to fetch comments:\", response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n    }\n  }\n  async function addComment() {\n    try {\n      const response = await fetch(`http://localhost:3001/postInfo/${id}/comment`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId: userInfo.id,\n          desc: newComment\n        })\n      });\n      if (response.ok) {\n        setCommentAdded(true);\n        setNewComment(\"\"); // Clear the input field after adding a comment\n      } else {\n        console.error(\"Failed to add comment:\", response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  }\n  if (!postInfo) return null;\n  async function deleteComment(commentId) {\n    try {\n      const response = await fetch(`http://localhost:3001/postInfo/${id}/${commentId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status} - ${response.statusText}`);\n      }\n      const data = await response.json();\n      setCommentAdded(true);\n    } catch (error) {\n      console.error(\"Error deleting comment:\", error.message);\n    }\n  }\n  async function deletePost() {\n    try {\n      const response = await fetch(`http://localhost:3001/postInfo/${id}/`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status} - ${response.statusText}`);\n      }\n      const data = await response.json();\n    } catch (error) {\n      console.error(\"Error deleting post:\", error.message);\n    }\n  }\n  const renderComments = () => /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: comments.reverse().map(comment => {\n      var _comment$user, _comment$user2;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.commentContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [(_comment$user = comment.user) !== null && _comment$user !== void 0 && _comment$user.fullname ? (_comment$user2 = comment.user) === null || _comment$user2 === void 0 ? void 0 : _comment$user2.fullname : \"Unknown\", \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), \" \", comment.desc, (comment.user && comment.user.id === userInfo.id || userInfo.id === (postInfo === null || postInfo === void 0 ? void 0 : postInfo.author._id) || userInfo.type === \"admin\") && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.deleteCommentButton,\n          onClick: () => deleteComment(comment.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: postInfo === null || postInfo === void 0 ? void 0 : postInfo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n      className: styles.time,\n      children: format(new Date(postInfo === null || postInfo === void 0 ? void 0 : postInfo.createdAt), \"MMM d, yyyy HH:mm\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.author,\n      children: [\"by \", postInfo === null || postInfo === void 0 ? void 0 : postInfo.author.fullname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), ((userInfo === null || userInfo === void 0 ? void 0 : userInfo.id) === (postInfo === null || postInfo === void 0 ? void 0 : postInfo.author._id) || (userInfo === null || userInfo === void 0 ? void 0 : userInfo.type) === \"admin\") && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actionButtons,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.editContainer,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/edit/${id}`,\n          className: styles.editBtn,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            strokeWidth: 1.5,\n            stroke: \"currentColor\",\n            className: \"w-6 h-6\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), \"Edit this post\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.editContainer,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts`,\n          className: styles.removeBtn,\n          onClick: () => deletePost(),\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            strokeWidth: 1.5,\n            stroke: \"currentColor\",\n            className: \"w-6 h-6\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"M15 12H9m12 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), \"Remove this post\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.views,\n      children: [\"Views: \", (postInfo === null || postInfo === void 0 ? void 0 : postInfo.views) / 2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.imageContainer,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:3001/${postInfo === null || postInfo === void 0 ? void 0 : postInfo.cover}`,\n        alt: \"Post Cover\",\n        className: styles.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: postInfo.content\n      },\n      className: styles.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), ((userInfo === null || userInfo === void 0 ? void 0 : userInfo.id) === (postInfo === null || postInfo === void 0 ? void 0 : postInfo.author._id) || (userInfo === null || userInfo === void 0 ? void 0 : userInfo.type) === \"admin\") && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tagsContainer,\n      children: postInfo.tags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tag,\n        children: tag\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.commentsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.commentHeading,\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), (userInfo === null || userInfo === void 0 ? void 0 : userInfo.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.addCommentContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"3\",\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: \"Add a comment...\",\n          className: styles.commentTextArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addComment,\n          className: styles.commentButton,\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), comments ? renderComments(postInfo.comments) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(PostPage, \"DsEcf8Xhp/+MMUln3PSzepJCszk=\", false, function () {\n  return [useParams];\n});\n_c = PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["useContext","useEffect","useState","Link","useParams","styles","format","UserContext","jsxDEV","_jsxDEV","PostPage","_s","postInfo","setPostInfo","newComment","setNewComment","comments","setComments","userInfo","id","commentAdded","setCommentAdded","fetchData","response","fetch","ok","Error","status","json","getComments","error","console","message","updateViews","method","log","statusText","commentsWithFullname","addComment","headers","body","JSON","stringify","userId","desc","deleteComment","commentId","credentials","data","deletePost","renderComments","children","reverse","map","comment","_comment$user","_comment$user2","className","commentContainer","user","fullname","fileName","_jsxFileName","lineNumber","columnNumber","author","_id","type","deleteCommentButton","onClick","container","title","time","Date","createdAt","actionButtons","editContainer","to","editBtn","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","removeBtn","views","imageContainer","src","cover","alt","image","dangerouslySetInnerHTML","__html","content","tagsContainer","tags","tag","commentsContainer","commentHeading","addCommentContainer","rows","value","onChange","e","target","placeholder","commentTextArea","commentButton","_c","$RefreshReg$"],"sources":["C:/Users/Win 10/Documents/GitHub/BlogApp/client/src/pages/PostPage.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport styles from \"../styles/PostPage.module.css\";\r\nimport { format } from \"date-fns\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\n\r\nexport default function PostPage() {\r\n  const [postInfo, setPostInfo] = useState(null);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n  const { userInfo } = useContext(UserContext);\r\n  const { id } = useParams();\r\n  const [commentAdded, setCommentAdded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch(`http://localhost:3001/postInfo/${id}`);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        const postInfo = await response.json();\r\n        setPostInfo(postInfo);\r\n        await getComments();\r\n        setCommentAdded(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching post data:\", error.message);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [commentAdded]);\r\n\r\n  useEffect(() => {\r\n    async function updateViews() {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:3001/postInfo/${id}/updateViews`,\r\n          {\r\n            method: \"PUT\",\r\n          }\r\n        );\r\n        if (response.ok) {\r\n          console.log(\"Views updated successfully!\");\r\n        } else {\r\n          console.error(\r\n            \"Failed to update views:\",\r\n            response.status,\r\n            response.statusText\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error updating views:\", error);\r\n      }\r\n    }\r\n\r\n    updateViews();\r\n  }, []);\r\n\r\n  async function getComments() {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3001/postInfo/${id}/getcomments`\r\n      );\r\n\r\n      if (response.ok) {\r\n        const commentsWithFullname = await response.json();\r\n        setComments(commentsWithFullname);\r\n      } else {\r\n        console.error(\r\n          \"Failed to fetch comments:\",\r\n          response.status,\r\n          response.statusText\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching comments:\", error);\r\n    }\r\n  }\r\n\r\n  async function addComment() {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3001/postInfo/${id}/comment`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ userId: userInfo.id, desc: newComment }),\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        setCommentAdded(true);\r\n        setNewComment(\"\"); // Clear the input field after adding a comment\r\n      } else {\r\n        console.error(\r\n          \"Failed to add comment:\",\r\n          response.status,\r\n          response.statusText\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding comment:\", error);\r\n    }\r\n  }\r\n\r\n  if (!postInfo) return null;\r\n\r\n  async function deleteComment(commentId) {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3001/postInfo/${id}/${commentId}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          credentials: \"include\",\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error: ${response.status} - ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setCommentAdded(true);\r\n    } catch (error) {\r\n      console.error(\"Error deleting comment:\", error.message);\r\n    }\r\n  }\r\n\r\n  async function deletePost() {\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/postInfo/${id}/`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error: ${response.status} - ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n    } catch (error) {\r\n      console.error(\"Error deleting post:\", error.message);\r\n    }\r\n  }\r\n\r\n  const renderComments = () => (\r\n    <ul>\r\n      {comments.reverse().map((comment) => (\r\n        <li key={comment.id} className={styles.commentContainer}>\r\n          <strong>\r\n            {comment.user?.fullname ? comment.user?.fullname : \"Unknown\"}:\r\n          </strong>{\" \"}\r\n          {comment.desc}\r\n          {((comment.user && comment.user.id === userInfo.id) ||\r\n            userInfo.id === postInfo?.author._id ||\r\n            userInfo.type === \"admin\") && (\r\n            <button\r\n              className={styles.deleteCommentButton}\r\n              onClick={() => deleteComment(comment.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          )}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.title}>{postInfo?.title}</h1>\r\n      <time className={styles.time}>\r\n        {format(new Date(postInfo?.createdAt), \"MMM d, yyyy HH:mm\")}\r\n      </time>\r\n      <div className={styles.author}>by {postInfo?.author.fullname}</div>\r\n      {(userInfo?.id === postInfo?.author._id ||\r\n        userInfo?.type === \"admin\") && (\r\n        <div className={styles.actionButtons}>\r\n          <div className={styles.editContainer}>\r\n            <Link to={`/edit/${id}`} className={styles.editBtn}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth={1.5}\r\n                stroke=\"currentColor\"\r\n                className=\"w-6 h-6\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\"\r\n                />\r\n              </svg>\r\n              Edit this post\r\n            </Link>\r\n          </div>\r\n          <div className={styles.editContainer}>\r\n            <Link\r\n              to={`/posts`}\r\n              className={styles.removeBtn}\r\n              onClick={() => deletePost()}\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth={1.5}\r\n                stroke=\"currentColor\"\r\n                className=\"w-6 h-6\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  d=\"M15 12H9m12 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\r\n                />\r\n              </svg>\r\n              Remove this post\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <p className={styles.views}>Views: {postInfo?.views / 2}</p>\r\n      <div className={styles.imageContainer}>\r\n        <img\r\n          src={`http://localhost:3001/${postInfo?.cover}`}\r\n          alt=\"Post Cover\"\r\n          className={styles.image}\r\n        />\r\n      </div>\r\n      <div\r\n        dangerouslySetInnerHTML={{ __html: postInfo.content }}\r\n        className={styles.content}\r\n      />\r\n      <h2>Tags</h2>\r\n      {(userInfo?.id === postInfo?.author._id ||\r\n        userInfo?.type === \"admin\") && (\r\n        <div className={styles.tagsContainer}>\r\n          {postInfo.tags.map((tag) => (\r\n            <div key={tag} className={styles.tag}>\r\n              {tag}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <div className={styles.commentsContainer}>\r\n        <h2 className={styles.commentHeading}>Comments</h2>\r\n        {userInfo?.id && (\r\n          <div className={styles.addCommentContainer}>\r\n            <textarea\r\n              rows=\"3\"\r\n              value={newComment}\r\n              onChange={(e) => setNewComment(e.target.value)}\r\n              placeholder=\"Add a comment...\"\r\n              className={styles.commentTextArea}\r\n            />\r\n            <button onClick={addComment} className={styles.commentButton}>\r\n              Add Comment\r\n            </button>\r\n          </div>\r\n        )}\r\n        {comments ? renderComments(postInfo.comments) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}